<?xml version="1.0" encoding="UTF-8"?>
<mutations>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>85</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>0</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnProjectIfReuseReports(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>87</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>0</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnProjectIfReuseReports(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>89</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>1</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnProjectTestsAlreadyExecuted(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>91</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>1</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnProjectTestsAlreadyExecuted(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>93</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>2</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnNotCSharpProject(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>94</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>3</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnProjectIfNoTests(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>96</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>2</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnProjectIfNoTests(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>shouldExecuteOnProject</mutatedMethod>
		<lineNumber>99</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>3</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testShouldNotExecuteOnNotCSharpProject(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>addAssembly</mutatedMethod>
		<lineNumber>107</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>4</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>addAssembly</mutatedMethod>
		<lineNumber>107</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>5</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>114</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>6</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>117</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>7</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>118</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>8</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>120</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>3</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>119</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>9</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>126</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>10</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>127</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>4</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>123</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>11</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>findTestAssemblies</mutatedMethod>
		<lineNumber>137</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>4</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>analyse</mutatedMethod>
		<lineNumber>146</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>12</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>analyse</mutatedMethod>
		<lineNumber>156</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>5</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>analyse</mutatedMethod>
		<lineNumber>159</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>13</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPattern(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>analyse</mutatedMethod>
		<lineNumber>162</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>6</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>analyse</mutatedMethod>
		<lineNumber>166</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>7</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>executeRunner</mutatedMethod>
		<lineNumber>175</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>14</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>executeRunner</mutatedMethod>
		<lineNumber>181</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>8</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='MEMORY_ERROR'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>executeRunner</mutatedMethod>
		<lineNumber>176</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>15</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>executeRunner</mutatedMethod>
		<lineNumber>188</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>9</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createRunner</mutatedMethod>
		<lineNumber>198</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>5</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>205</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>10</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>206</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>11</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>208</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>12</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='KILLED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>209</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>13</index>
		<killingTest>org.sonar.plugins.csharp.gallio.GallioSensorTest.testAnalyseWithPatternAndSafeMode(org.sonar.plugins.csharp.gallio.GallioSensorTest)</killingTest>
	</mutation>
	<mutation detected='true' status='MEMORY_ERROR'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>212</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>14</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>213</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>15</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>214</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>16</index>
		<killingTest />
	</mutation>
	<mutation detected='true' status='MEMORY_ERROR'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>216</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>17</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>218</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>18</index>
		<killingTest />
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>GallioSensor.java</sourceFile>
		<mutatedClass>org.sonar.plugins.csharp.gallio.GallioSensor</mutatedClass>
		<mutatedMethod>createBuilder</mutatedMethod>
		<lineNumber>221</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator>
		<index>6</index>
		<killingTest />
	</mutation>

	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>Main.java</sourceFile>
		<mutatedClass>some.Main</mutatedClass>
		<mutatedMethod>main</mutatedMethod>
		<methodDescription>([Ljava/lang/String;)V</methodDescription>
		<lineNumber>12</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator>
		<index>14</index>
		<killingTest />
		<description>changed conditional boundary</description>
	</mutation>
	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>Main.java</sourceFile>
		<mutatedClass>some.Main</mutatedClass>
		<mutatedMethod>main</mutatedMethod>
		<methodDescription>([Ljava/lang/String;)V</methodDescription>
		<lineNumber>13</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator>
		<index>17</index>
		<killingTest />
		<description>Changed increment from 1 to -1</description>
	</mutation>
	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>Main.java</sourceFile>
		<mutatedClass>some.Main</mutatedClass>
		<mutatedMethod>main</mutatedMethod>
		<methodDescription>([Ljava/lang/String;)V</methodDescription>
		<lineNumber>12</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator>
		<index>14</index>
		<killingTest />
		<description>negated conditional</description>
	</mutation>
	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>Main.java</sourceFile>
		<mutatedClass>some.Main</mutatedClass>
		<mutatedMethod>main</mutatedMethod>
		<methodDescription>([Ljava/lang/String;)V</methodDescription>
		<lineNumber>10</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>5</index>
		<killingTest />
		<description>removed call to java/io/PrintStream::println</description>
	</mutation>
	<mutation detected='false' status='NO_COVERAGE'>
		<sourceFile>MainKotlin.kt</sourceFile>
		<mutatedClass>some.Workd</mutatedClass>
		<mutatedMethod>world</mutatedMethod>
		<methodDescription>()V</methodDescription>
		<lineNumber>17</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>7</index>
		<killingTest />
		<description>removed call to java/io/PrintStream::print</description>
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>MainKotlin.kt</sourceFile>
		<mutatedClass>some.World</mutatedClass>
		<mutatedMethod>world</mutatedMethod>
		<methodDescription>()V</methodDescription>
		<lineNumber>17</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>7</index>
		<killingTest />
		<description>removed call to java/io/PrintStream::print</description>
	</mutation>
	<mutation detected='false' status='SURVIVED'>
		<sourceFile>MainKotlin.kt</sourceFile>
		<mutatedClass>some.Hello</mutatedClass>
		<mutatedMethod>hello</mutatedMethod>
		<methodDescription>()V</methodDescription>
		<lineNumber>6</lineNumber>
		<mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator>
		<index>7</index>
		<killingTest />
		<description>removed call to java/io/PrintStream::print</description>
	</mutation>
</mutations>
